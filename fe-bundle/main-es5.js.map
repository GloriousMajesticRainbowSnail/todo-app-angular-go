{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/todo-creator/todo-creator.component.ts","webpack:///src/app/todo-creator/todo-creator.component.html","webpack:///src/app/todo-item/todo-item.component.ts","webpack:///src/app/todo-item/todo-item.component.html","webpack:///src/app/todo.model.ts","webpack:///src/app/todo.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","service","refreshTodos","change","todo$","pipe","getAllTodos","description","createTodo","Description","todo","updateTodo","onTodoCreated","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","TodoCreatorComponent","TodoItemComponent","toggled","IsComplete","emit","toggleCompleted","TodoModel","init","Object","assign","TodoService","http","get","post","put","Id","providedIn","environment","production","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMC,MAAM,GAAW,EAAvB;;QAMaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBF,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBC,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBF,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACoBI;;AAIE;AAAA;;AAAA;;AAAA;AAAA;;AACD;;;;;;AAFC;;;;;;AAJJ;;AACE;;AAMF;;;;;;AAJI;;AAAA;;;;QDXOM,Y;AAGX,4BAA2BC,OAA3B,EAAiD;AAAA;;AAAtB,aAAAA,OAAA,GAAAA,OAAA;AACzB,aAAKC,YAAL,CAAkB,gDAAG,IAAH,CAAlB;AACD;;;;qCAEYC,M,EAAyB;AAAA;;AACpC,eAAKC,KAAL,GAAaD,MAAM,CAACE,IAAP,CAAY,iEAAU;AAAA,mBAAM,KAAI,CAACJ,OAAL,CAAaK,WAAb,EAAN;AAAA,WAAV,CAAZ,CAAb;AACD;;;sCAEaC,W,EAAqB;AACjC,eAAKL,YAAL,CACE,KAAKD,OAAL,CAAaO,UAAb,CAAwB,IAAI,qDAAJ,CAAc;AAAEC,uBAAW,EAAEF;AAAf,WAAd,CAAxB,CADF;AAGD;;;sCAEaG,I,EAAiB;AAC7B,eAAKR,YAAL,CAAkB,KAAKD,OAAL,CAAaU,UAAb,CAAwBD,IAAxB,CAAlB;AACD;;;;;;;uBAnBUV,Y,EAAY,0H;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA,e;AAAA,a;AAAA,mT;AAAA;AAAA;ACXzB;;AACE;;AACE;;AACE;;AACE;;AAAe;;AAAoB;;AACnC;;AACE;;AACF;;AACF;;AACF;;AACF;;AAEA;;AACE;;AAEE;AAAA,mBAAW,IAAAY,aAAA,QAAX;AAAgC,WAAhC;;AACD;;AACH;;AAEA;;;;AAQF;;;;AARmB;;AAAA;;;;;;;;;;sEDRNZ,Y,EAAY;cALxB,uDAKwB;eALd;AACTa,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;;;;;AEXzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAgBaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBADJ,CAAC,uEAAD,EAAgB,oEAAhB,EAAkC,qEAAlC,CACI;;;;0HAGFA,S,EAAS;AAAA,uBALL,2DAKK,EALS,gFAKT,EAL4B,yFAK5B;AALgD,kBAC1D,uEAD0D,EAC3C,oEAD2C,EACzB,qEADyB;AAKhD,O;AAJuC,K;;;;;sEAIhDA,S,EAAS;cANrB,sDAMqB;eANZ;AACRC,sBAAY,EAAE,CAAC,2DAAD,EAAe,gFAAf,EAAkC,yFAAlC,CADN;AAERlB,iBAAO,EAAE,CAAC,uEAAD,EAAgB,oEAAhB,EAAkC,qEAAlC,CAFD;AAGRmB,mBAAS,EAAE,EAHH;AAIRC,mBAAS,EAAE,CAAC,2DAAD;AAJH,S;AAMY,Q;;;;;;;;;;;;;;;;;;AChBtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,oB;AAEX,sCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,oB;AAAoB,K;;;YAApBA,oB;AAAoB,uC;AAAA,c;AAAA,a;AAAA,oM;AAAA;AAAA;ACPjC;;AACE;;AAKA;;AACE;;AAA8C;;AAAM;;AACtD;;AACF;;;;;;;;sEDFaA,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTP,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;AEPjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaM,iB;AAOX,mCAAc;AAAA;;AAFd,aAAAC,OAAA,GAAU,IAAI,0DAAJ,EAAV;AAEgB;;;;mCAER,CAAW;;;0CAED;AAChB,eAAKZ,IAAL,CAAUa,UAAV,GAAuB,CAAC,KAAKb,IAAL,CAAUa,UAAlC;AACA,eAAKD,OAAL,CAAaE,IAAb,CAAkB,KAAKd,IAAvB;AACD;;;;;;;uBAdUW,iB;AAAiB,K;;;YAAjBA,iB;AAAiB,oC;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,c;AAAA,a;AAAA,0J;AAAA;AAAA;ACR9B;;AACE;;AACE;;AACE;;AAGE;AAAA,mBAAU,IAAAI,eAAA,EAAV;AAA2B,WAA3B;;AAHF;;AAKF;;AACF;;AACA;;AACE;;AACF;;AACF;;;;AARQ;;AAAA;;AAMJ;;AAAA;;;;;;;;sEDHSJ,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTR,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKmB,Q;;;;gBAC3B;;;gBAGA;;;;;;;;;;;;;;;;;;;;AEZH;AAAA;;;AAAA;AAAA;AAAA;;QAAaW,S,GAKX;AACA,uBAAmBC,IAAnB,EAA8C;AAAA;;AAHvC,WAAAJ,UAAA,GAAa,KAAb;AAILK,YAAM,CAACC,MAAP,CAAc,IAAd,EAAoBF,IAApB;AACD,K;;;;;;;;;;;;;;;;;ACRH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaG,W;AACX,2BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAoB;;;;sCAE7B;AACT,iBAAO,KAAKA,IAAL,CAAUC,GAAV,CAA2B,OAA3B,CAAP;AACD;;;mCAEUtB,I,EAAiB;AAC1B,iBAAO,KAAKqB,IAAL,CAAUE,IAAV,CAA0B,OAA1B,EAAmCvB,IAAnC,CAAP;AACD;;;mCAEUA,I,EAAiB;AAC1B,iBAAO,KAAKqB,IAAL,CAAUG,GAAV,iBAAuBxB,IAAI,CAACyB,EAA5B,GAAkCzB,IAAlC,CAAP;AACD;;;;;;;uBAbUoB,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVM,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACTxB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { TodoModel } from './todo.model';\nimport { TodoService } from './todo.service';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  todo$: Observable<TodoModel[]>;\n\n  public constructor(private service: TodoService) {\n    this.refreshTodos(of(null));\n  }\n\n  refreshTodos(change: Observable<any>) {\n    this.todo$ = change.pipe(switchMap(() => this.service.getAllTodos()));\n  }\n\n  onTodoCreated(description: string) {\n    this.refreshTodos(\n      this.service.createTodo(new TodoModel({ Description: description }))\n    );\n  }\n\n  onTodoToggled(todo: TodoModel) {\n    this.refreshTodos(this.service.updateTodo(todo));\n  }\n}\n","<div class=\"container-fluid\">\n  <div class=\"row\">\n    <div class=\"col text-center\">\n      <div id=\"header-section\">\n        <h1 class=\"h4\">Shale Apps Interview</h1>\n        <h2 class=\"h5\">\n          A quick-and-dirty todo app to demonstrate full-stack proficiency\n        </h2>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <app-todo-creator\n      class=\"col-12 my-3\"\n      (created)=\"onTodoCreated($event)\"\n    ></app-todo-creator>\n  </div>\n\n  <div class=\"row\" *ngIf=\"todo$ | async as todos\">\n    <app-todo-item\n      class=\"col-12 mb-3\"\n      *ngFor=\"let todo of todos\"\n      [todo]=\"todo\"\n      (toggled)=\"onTodoToggled($event)\"\n    ></app-todo-item>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TodoItemComponent } from './todo-item/todo-item.component';\nimport { TodoCreatorComponent } from './todo-creator/todo-creator.component';\n\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [AppComponent, TodoItemComponent, TodoCreatorComponent],\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-todo-creator',\n  templateUrl: './todo-creator.component.html',\n  styleUrls: ['./todo-creator.component.scss']\n})\nexport class TodoCreatorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"input-group mb-3\">\n  <input\n    type=\"text\"\n    class=\"form-control\"\n    placeholder=\"What would you like to do?\"\n  />\n  <div class=\"input-group-append\">\n    <button class=\"btn btn-primary\" type=\"button\">Create</button>\n  </div>\n</div>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { TodoModel } from '../todo.model';\n\n@Component({\n  selector: 'app-todo-item',\n  templateUrl: './todo-item.component.html',\n  styleUrls: ['./todo-item.component.scss'],\n})\nexport class TodoItemComponent implements OnInit {\n  @Input()\n  todo: TodoModel;\n\n  @Output()\n  toggled = new EventEmitter<TodoModel>();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  toggleCompleted() {\n    this.todo.IsComplete = !this.todo.IsComplete;\n    this.toggled.emit(this.todo);\n  }\n}\n","<div class=\"input-group\">\n  <div class=\"input-group-prepend\">\n    <div class=\"input-group-text\">\n      <input\n        type=\"checkbox\"\n        [checked]=\"todo.IsComplete\"\n        (change)=\"toggleCompleted()\"\n      />\n    </div>\n  </div>\n  <p class=\"form-control\">\n    {{ todo.Description }}\n  </p>\n</div>\n","export class TodoModel {\r\n  public Id: string;\r\n  public Description: string;\r\n  public IsComplete = false;\r\n\r\n  // Allows a Todo to be initialized with a partial object\r\n  public constructor(init?: Partial<TodoModel>) {\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { TodoModel } from './todo.model';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TodoService {\n  constructor(private http: HttpClient) {}\n\n  getAllTodos(): Observable<TodoModel[]> {\n    return this.http.get<TodoModel[]>('todos');\n  }\n\n  createTodo(todo: TodoModel) {\n    return this.http.post<TodoModel>('todos', todo);\n  }\n\n  updateTodo(todo: TodoModel) {\n    return this.http.put(`todos/${todo.Id}`, todo);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}